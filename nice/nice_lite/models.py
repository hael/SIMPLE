from django.db import models

class ProjectModel(models.Model):
    name = models.CharField(max_length=200)
    date = models.DateTimeField()
    desc = models.CharField(max_length=1024, default='')
    dirc = models.CharField(max_length=1024, default='')
    
class DatasetModel(models.Model):
    disp = models.IntegerField(default=0)
    jcnt = models.IntegerField(default=0)
    proj = models.ForeignKey(ProjectModel, on_delete=models.CASCADE)
    name = models.CharField(max_length=200, default='')
    desc = models.CharField(max_length=200, default='')
    dirc = models.CharField(max_length=200, default='')
    link = models.CharField(max_length=200, default='')
    user = models.CharField(max_length=50,  default='')
    cdat = models.DateTimeField(auto_now_add=True, blank=True)
    mdat = models.DateTimeField(auto_now_add=True, blank=True)

class WorkspaceModel(models.Model):
    disp = models.IntegerField(default=0)
    jcnt = models.IntegerField(default=0)
    proj = models.ForeignKey(ProjectModel, on_delete=models.CASCADE)
    name = models.CharField(max_length=200, default='')
    desc = models.CharField(max_length=200, default='')
    dirc = models.CharField(max_length=200, default='')
    link = models.CharField(max_length=200, default='')
    user = models.CharField(max_length=50,  default='')
    cdat = models.DateTimeField(auto_now_add=True, blank=True)
    mdat = models.DateTimeField(auto_now_add=True, blank=True)
    nstr = models.JSONField(default=dict)

class JobModel(models.Model):
    disp = models.IntegerField(default=0)
    dset = models.ForeignKey(DatasetModel, on_delete=models.CASCADE)
    name = models.CharField(max_length=200, default='')
    desc = models.CharField(max_length=200, default='')
    dirc = models.CharField(max_length=200, default='')
    cdat = models.DateTimeField()
    args = models.JSONField(default=dict)
    status = models.CharField(max_length=20, default='unknown')
    preprocessing_stats         = models.JSONField(default=dict)
    preprocessing_status        = models.CharField(max_length=20, default='unknown')
    preprocessing_update        = models.JSONField(default=dict)
    preprocessing_heartbeat     = models.DateTimeField(auto_now_add=True, blank=True)
    optics_assignment_stats     = models.JSONField(default=dict)
    optics_assignment_status    = models.CharField(max_length=20, default='unknown')
    optics_assignment_update    = models.JSONField(default=dict)
    optics_assignment_heartbeat = models.DateTimeField(auto_now_add=True, blank=True)
    initial_picking_stats       = models.JSONField(default=dict)
    initial_picking_status      = models.CharField(max_length=20, default='unknown')
    initial_picking_update      = models.JSONField(default=dict)
    initial_picking_heartbeat   = models.DateTimeField(auto_now_add=True, blank=True)
    generate_pickrefs_stats     = models.JSONField(default=dict)
    generate_pickrefs_status    = models.CharField(max_length=20, default='unknown')
    generate_pickrefs_update    = models.JSONField(default=dict)
    generate_pickrefs_heartbeat = models.DateTimeField(auto_now_add=True, blank=True)
    reference_picking_stats     = models.JSONField(default=dict)
    reference_picking_status    = models.CharField(max_length=20, default='unknown')
    reference_picking_update    = models.JSONField(default=dict)
    reference_picking_heartbeat = models.DateTimeField(auto_now_add=True, blank=True)
    particle_sieving_stats      = models.JSONField(default=dict)
    particle_sieving_status     = models.CharField(max_length=20, default='unknown')
    particle_sieving_update     = models.JSONField(default=dict)
    particle_sieving_heartbeat  = models.DateTimeField(auto_now_add=True, blank=True)
    classification_2D_stats     = models.JSONField(default=dict)
    classification_2D_status    = models.CharField(max_length=20, default='unknown')
    classification_2D_update    = models.JSONField(default=dict)
    classification_2D_heartbeat = models.DateTimeField(auto_now_add=True, blank=True)
    particle_sets_stats         = models.JSONField(default=dict)

class JobClassicModel(models.Model):
    disp = models.IntegerField(default=0)
    prnt = models.IntegerField(default=0)
    wspc = models.ForeignKey(WorkspaceModel, on_delete=models.CASCADE)
    name = models.CharField(max_length=200, default='')
    prog = models.CharField(max_length=200, default='')
    desc = models.CharField(max_length=200, default='')
    dirc = models.CharField(max_length=200, default='')
    pckg = models.CharField(max_length=20, default='')
    cdat = models.DateTimeField()
    status = models.CharField(max_length=20, default='unknown')
    heartbeat = models.DateTimeField(auto_now_add=True, blank=True)
    args = models.JSONField(default=dict)
    update  = models.JSONField(default=dict)

class DispatchModel(models.Model):
    scmd = models.CharField(max_length=200, default='')
    url  = models.CharField(max_length=200, default='')
    tplt = models.TextField(default='')
    active = models.BooleanField(default=False)
