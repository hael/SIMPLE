
       _______ _____ _______  _____         _______
       |______   |   |  |  | |_____] |      |______
       ______| __|__ |  |  | |       |_____ |______  v2.5
 
simplecryoem.com


ABOUT

Single-particle IMage Processing Linux Engine is a program package for 
cryo-EM image processing, focusing on ab initio 3D reconstruction of 
low-symmetry single-particles. The SIMPLE back-end consists of an 
object-oriented numerical library written in modern Fortran. The
SIMPLE front-end consists of a few standalone, interoperable 
components developed according to the "Unix toolkit philosophy".

SIMPLE is free software: you can redistribute it and/or modify it 
under the terms of the GNU General Public License as published by the 
Free Software Foundation, either version 3 of the license, or (at your 
option) any later version. SIMPLE is distributed with the hope that it 
will be useful, but WITHOUT ANY WARRANTY; without even the implied 
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See 
the GNU General Public License for more details.


INSTALLATION INSTRUCTIONS

It is assumed that the software dependencies are already installed.
For more detailed instructions regarding software requirements refer 
to the SIMPLE 2.5 manual.

System Requirements:

    - Linux: Ubuntu 15.04 and above
    - MacOs: 10.10 and above
    - CMake 3.2 and above
    - FFTW 3.3 and above
    - GNU toolchain (gcc & gfortran) 4.9 to 5.4

Installation:

1. Create the directory in which you are going to install SIMPLE 
(referred here as <simple_path>):

    $ mkdir <simple_path>

2. Unzip the SIMPLE 2.5 tarball in this directory. Assuming you have 
downloaded the tarball in the <downloads> directory:
    
    $ mv <downloads>/SIMPLE2.5.tgz <simple path>
    $ cd <simple path>
    $ tar -xzf SIMPLE2.5.tgz

3. Create a directory for the compilation:

    $ cd simple2.5
    $ mkdir build
    $ cd build

4. compile and install SIMPLE 2.5:

    $ cmake ../
    $ make -j install

This will lead to installing SIMPLE in the 'build' directory. If you
wish to provide an alternative installation directory substitute step 4
with:

    $ cmake -DCMAKE_INSTALL_PREFIX=<alternative directory> ../
    $ make -j install

Step 4 also assumes that gcc/gfortran and FFTW are installed in fairly 
standard directories on your machine. In case you have a more exotic 
setup you can provide the paths pointing to your custom gcc/gfortran & 
FFTW by substituting step 4 with:

    $ FC=<gcc/gfortran path> FFTW_DIR=<FFTW path> cmake ../
    $ make -j install

For instance, on MacOS Macports users may use: FC=/opt/local  
FFTW_DIR=/opt/local; Fink users: FC=/sw/ FFTW_DIR=/sw/.






Testing

Test the core components

# Testing
make test
ctest --output-on-failure
Test the features

Each of the following features have a test executable in the bin directory with a prefix simple_test_.

binomial_para    parse       
cartcorr_sanity  ptcl_conv   
defocus_groups   scatsrch    
elem_bess        shelliter   
ft_expanded      speed       
imgfile          srch        
install          timer       
new_ori          units       
omp_timer        volpft_srch 
order_corr     
To run all the feature tests use:

for test in bin/simple_test_*;do
./$test
done
Usage

See User documentation

Changelog

See doc/ReleaseNotes
