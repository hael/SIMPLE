/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * performancePrimeJPanel.java
 *
 * Created on 25/11/2015, 1:18:52 PM
 */

package edu.kit.gridbeans.simpleprime.plugin;

import javax.swing.JPanel;

import com.intel.gpe.gridbeans.plugins.DataSetException;
import com.intel.gpe.gridbeans.plugins.swing.panels.GridBeanPanel;
import com.intel.gpe.gridbeans.plugins.translators.StringValueTranslator;
import com.intel.gpe.gridbeans.plugins.validators.IntegerValueValidator;

import edu.kit.gridbeans.simpleprime.SimplePrimeGridBean;

/**
 *
 * @author Frederic Bonnet
 * @Date 25th November 2015
 * 
 */
public class PerformancePrimeJPanel extends JPanel {
    private GridBeanPanel parentPanel;
    /**
     * 
     */
    private static final long serialVersionUID = -4158450503745524144L;
    /** Creates new form performancePrimeJPanel */
    public PerformancePrimeJPanel(GridBeanPanel parentpanel) throws DataSetException {
        this.parentPanel = parentpanel;
        initComponents();
        initCustomComponents();
        bindComponents();
    }

    private void initCustomComponents() {
        //GPU environment button group
        gpuEnvironmentbuttonGroup.add(useCUDACRadioButton);
        gpuEnvironmentbuttonGroup.add(useOpenCLRadioButton);
    }

    private void bindComponents() throws DataSetException {
        //Number of threads per sockets
        parentPanel.linkTextField(SimplePrimeGridBean.NTHR, nthrThreadsPerSocketTextField);
        parentPanel.setValueTranslator(SimplePrimeGridBean.NTHR, StringValueTranslator.getInstance());
        parentPanel.setValueValidator(SimplePrimeGridBean.NTHR, new IntegerValueValidator());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gpuEnvironmentbuttonGroup = new javax.swing.ButtonGroup();
        mainPerformancePrimeScrollPanel = new javax.swing.JScrollPane();
        mainPerformancePrimePanel = new javax.swing.JPanel();
        dataDistributionPanel = new javax.swing.JPanel();
        npartLabel = new javax.swing.JLabel();
        npartTextField = new javax.swing.JTextField();
        openMPPanel = new javax.swing.JPanel();
        useOpenMPRadioButton = new javax.swing.JRadioButton();
        threadsPerSocketLabel = new javax.swing.JLabel();
        nthrThreadsPerSocketTextField = new javax.swing.JTextField();
        GPUPanel = new javax.swing.JPanel();
        useGPURadioButton = new javax.swing.JRadioButton();
        gpuEnvPanel = new javax.swing.JPanel();
        useCUDACRadioButton = new javax.swing.JRadioButton();
        useOpenCLRadioButton = new javax.swing.JRadioButton();

        setLayout(new java.awt.BorderLayout());

        dataDistributionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Data distribution over the resources..."));

        npartLabel.setText("Data distribution over the nodes npart:");

        javax.swing.GroupLayout dataDistributionPanelLayout = new javax.swing.GroupLayout(dataDistributionPanel);
        dataDistributionPanel.setLayout(dataDistributionPanelLayout);
        dataDistributionPanelLayout.setHorizontalGroup(
            dataDistributionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataDistributionPanelLayout.createSequentialGroup()
                .addComponent(npartLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(npartTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addContainerGap())
        );
        dataDistributionPanelLayout.setVerticalGroup(
            dataDistributionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataDistributionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(npartLabel)
                .addComponent(npartTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        openMPPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("OpenMP configuration..."));

        useOpenMPRadioButton.setText("Use OpenMP");
        useOpenMPRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useOpenMPRadioButtonActionPerformed(evt);
            }
        });

        threadsPerSocketLabel.setText("Threads/socket nthr:");

        javax.swing.GroupLayout openMPPanelLayout = new javax.swing.GroupLayout(openMPPanel);
        openMPPanel.setLayout(openMPPanelLayout);
        openMPPanelLayout.setHorizontalGroup(
            openMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openMPPanelLayout.createSequentialGroup()
                .addComponent(useOpenMPRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(threadsPerSocketLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nthrThreadsPerSocketTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        openMPPanelLayout.setVerticalGroup(
            openMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(useOpenMPRadioButton)
                .addComponent(threadsPerSocketLabel)
                .addComponent(nthrThreadsPerSocketTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        GPUPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("GPU details..."));

        useGPURadioButton.setText("Use GPU");
        useGPURadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useGPURadioButtonActionPerformed(evt);
            }
        });

        gpuEnvPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("GPU environment..."));

        useCUDACRadioButton.setText("CUDA C");
        useCUDACRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useCUDACRadioButtonActionPerformed(evt);
            }
        });

        useOpenCLRadioButton.setText("OpenCL");
        useOpenCLRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useOpenCLRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gpuEnvPanelLayout = new javax.swing.GroupLayout(gpuEnvPanel);
        gpuEnvPanel.setLayout(gpuEnvPanelLayout);
        gpuEnvPanelLayout.setHorizontalGroup(
            gpuEnvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gpuEnvPanelLayout.createSequentialGroup()
                .addComponent(useCUDACRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(useOpenCLRadioButton)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        gpuEnvPanelLayout.setVerticalGroup(
            gpuEnvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gpuEnvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(useCUDACRadioButton)
                .addComponent(useOpenCLRadioButton))
        );

        javax.swing.GroupLayout GPUPanelLayout = new javax.swing.GroupLayout(GPUPanel);
        GPUPanel.setLayout(GPUPanelLayout);
        GPUPanelLayout.setHorizontalGroup(
            GPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GPUPanelLayout.createSequentialGroup()
                .addComponent(useGPURadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gpuEnvPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        GPUPanelLayout.setVerticalGroup(
            GPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(useGPURadioButton)
            .addGroup(GPUPanelLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(gpuEnvPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout mainPerformancePrimePanelLayout = new javax.swing.GroupLayout(mainPerformancePrimePanel);
        mainPerformancePrimePanel.setLayout(mainPerformancePrimePanelLayout);
        mainPerformancePrimePanelLayout.setHorizontalGroup(
            mainPerformancePrimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPerformancePrimePanelLayout.createSequentialGroup()
                .addGroup(mainPerformancePrimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(openMPPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataDistributionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GPUPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(452, Short.MAX_VALUE))
        );
        mainPerformancePrimePanelLayout.setVerticalGroup(
            mainPerformancePrimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPerformancePrimePanelLayout.createSequentialGroup()
                .addComponent(dataDistributionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openMPPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GPUPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(454, Short.MAX_VALUE))
        );

        mainPerformancePrimeScrollPanel.setViewportView(mainPerformancePrimePanel);

        add(mainPerformancePrimeScrollPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void useOpenCLRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useOpenCLRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useOpenCLRadioButtonActionPerformed

    private void useCUDACRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useCUDACRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useCUDACRadioButtonActionPerformed

    private void useGPURadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useGPURadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useGPURadioButtonActionPerformed

    private void useOpenMPRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useOpenMPRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useOpenMPRadioButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GPUPanel;
    private javax.swing.JPanel dataDistributionPanel;
    private javax.swing.JPanel gpuEnvPanel;
    private javax.swing.ButtonGroup gpuEnvironmentbuttonGroup;
    private javax.swing.JPanel mainPerformancePrimePanel;
    private javax.swing.JScrollPane mainPerformancePrimeScrollPanel;
    private javax.swing.JLabel npartLabel;
    private javax.swing.JTextField npartTextField;
    private javax.swing.JTextField nthrThreadsPerSocketTextField;
    private javax.swing.JPanel openMPPanel;
    private javax.swing.JLabel threadsPerSocketLabel;
    private javax.swing.JRadioButton useCUDACRadioButton;
    private javax.swing.JRadioButton useGPURadioButton;
    private javax.swing.JRadioButton useOpenCLRadioButton;
    private javax.swing.JRadioButton useOpenMPRadioButton;
    // End of variables declaration//GEN-END:variables

}
