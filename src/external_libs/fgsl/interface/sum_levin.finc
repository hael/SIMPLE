!-*-f90-*-
!
! Interfaces: series acceleration
! 
  function gsl_sum_levin_u_alloc(n) bind(c)
    import
    integer(c_size_t), value :: n
    type(c_ptr) :: gsl_sum_levin_u_alloc
  end function gsl_sum_levin_u_alloc
  function gsl_sum_levin_u_free(w) bind(c)
    import
    type(c_ptr), value :: w
    integer(c_int) :: gsl_sum_levin_u_free
  end function gsl_sum_levin_u_free
  function gsl_sum_levin_u_accel(array, array_size, w, sum_accel, abserr) bind(c)
    import
    integer(c_size_t), value :: array_size
    real(c_double), intent(in) :: array(array_size)
    type(c_ptr), value :: w
    real(c_double), intent(out) :: sum_accel, abserr
    integer(c_int) :: gsl_sum_levin_u_accel
  end function gsl_sum_levin_u_accel
  function gsl_sum_levin_utrunc_alloc(n) bind(c)
    import
    integer(c_size_t), value :: n
    type(c_ptr) :: gsl_sum_levin_utrunc_alloc
  end function gsl_sum_levin_utrunc_alloc
  function gsl_sum_levin_utrunc_free(w) bind(c)
    import
    type(c_ptr), value :: w
    integer(c_int) :: gsl_sum_levin_utrunc_free
  end function gsl_sum_levin_utrunc_free
  function gsl_sum_levin_utrunc_accel(array, array_size, w, sum_accel, abserr) bind(c)
    import
    integer(c_size_t), value :: array_size
    real(c_double), intent(in) :: array(array_size)
    type(c_ptr), value :: w
    real(c_double), intent(out) :: sum_accel, abserr
    integer(c_int) :: gsl_sum_levin_utrunc_accel
  end function gsl_sum_levin_utrunc_accel
  
