In any parallel region or OpenMP construct don’t use any constructors or destructors. Don’t update containers or iterators. Parallelise only
old-school Firtran array statements and loops.

omp_get_wtime()

This returns the elapsed (wall-clock) time in seconds a double precision floating-point.
The time is since some arbitrary time in the past
• It is guaranteed to be fixed for one execution
• It is guaranteed to be the same for all threads

omp_get_thread_num()

This returns the thread number being executed
• It is a default integer from 0 upwards

omp_get_num_threads()

This returns the number of threads being used
• It is a default integer from 1 upwards

Three essentials to OpenMP parallelism:
• Establishing a team of threads
• Saying if data is shared or private
• Sharing out the work between threads