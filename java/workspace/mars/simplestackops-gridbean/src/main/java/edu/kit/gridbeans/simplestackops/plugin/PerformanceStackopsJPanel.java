/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PerformanceStackopsJPanel.java
 *
 * Created on 26/11/2015, 11:44:47 AM
 */

package edu.kit.gridbeans.simplestackops.plugin;

import javax.swing.JPanel;

import com.intel.gpe.gridbeans.plugins.DataSetException;
import com.intel.gpe.gridbeans.plugins.swing.panels.GridBeanPanel;

/**
 *
 * @author frederic
 */
public class PerformanceStackopsJPanel extends JPanel {
    private GridBeanPanel parentPanel;
    /**
     * Add UID
     */
    private static final long serialVersionUID = 1321901654295041212L;
    /** Creates new form PerformanceStackopsJPanel */
    public PerformanceStackopsJPanel(GridBeanPanel parentpanel) throws DataSetException {
        this.parentPanel = parentpanel;
        initComponents();
        initCustomComponents();
        bindComponents();
    }

    private void initCustomComponents() {
        // TODO Auto-generated method stub
        
    }

    private void bindComponents() {
        // TODO Auto-generated method stub
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPerformanceSatckopsScrollPanel = new javax.swing.JScrollPane();
        mainPerformanceStackopsPanel = new javax.swing.JPanel();
        dataDistributionPanel = new javax.swing.JPanel();
        npartLabel = new javax.swing.JLabel();
        npartTextField = new javax.swing.JTextField();
        openMPPanel = new javax.swing.JPanel();
        useOpenMPRadioButton = new javax.swing.JRadioButton();
        threadsPerSocketLabel = new javax.swing.JLabel();
        nthrThreadsPerSocketTextField = new javax.swing.JTextField();
        GPUPanel = new javax.swing.JPanel();
        useGPURadioButton = new javax.swing.JRadioButton();
        gpuEnvPanel = new javax.swing.JPanel();
        useCUDACRadioButton = new javax.swing.JRadioButton();
        openCLRadioButton = new javax.swing.JRadioButton();
        splitPanel = new javax.swing.JPanel();
        splitLabel = new javax.swing.JLabel();
        splitTextField = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        dataDistributionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data distribution over the resources...", 0, 0, null, new java.awt.Color(-16776961,true)));

        npartLabel.setText("Data distribution over the nodes npart:");

        javax.swing.GroupLayout dataDistributionPanelLayout = new javax.swing.GroupLayout(dataDistributionPanel);
        dataDistributionPanel.setLayout(dataDistributionPanelLayout);
        dataDistributionPanelLayout.setHorizontalGroup(
            dataDistributionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataDistributionPanelLayout.createSequentialGroup()
                .addComponent(npartLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(npartTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addContainerGap())
        );
        dataDistributionPanelLayout.setVerticalGroup(
            dataDistributionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataDistributionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(npartLabel)
                .addComponent(npartTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        openMPPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "OpenMP configuration...", 0, 0, null, new java.awt.Color(-16776961,true)));

        useOpenMPRadioButton.setText("Use OpenMP");

        threadsPerSocketLabel.setText("Threads/socket nthr:");

        javax.swing.GroupLayout openMPPanelLayout = new javax.swing.GroupLayout(openMPPanel);
        openMPPanel.setLayout(openMPPanelLayout);
        openMPPanelLayout.setHorizontalGroup(
            openMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openMPPanelLayout.createSequentialGroup()
                .addComponent(useOpenMPRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(threadsPerSocketLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nthrThreadsPerSocketTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        openMPPanelLayout.setVerticalGroup(
            openMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(useOpenMPRadioButton)
                .addComponent(threadsPerSocketLabel)
                .addComponent(nthrThreadsPerSocketTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        GPUPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GPU details...", 0, 0, null, new java.awt.Color(-16776961,true)));

        useGPURadioButton.setText("Use GPU");

        gpuEnvPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GPU environment...", 0, 0, null, new java.awt.Color(-65281,true)));

        useCUDACRadioButton.setText("CUDA C");

        openCLRadioButton.setText("OpenCL");

        javax.swing.GroupLayout gpuEnvPanelLayout = new javax.swing.GroupLayout(gpuEnvPanel);
        gpuEnvPanel.setLayout(gpuEnvPanelLayout);
        gpuEnvPanelLayout.setHorizontalGroup(
            gpuEnvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gpuEnvPanelLayout.createSequentialGroup()
                .addComponent(useCUDACRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openCLRadioButton)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        gpuEnvPanelLayout.setVerticalGroup(
            gpuEnvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gpuEnvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(useCUDACRadioButton)
                .addComponent(openCLRadioButton))
        );

        javax.swing.GroupLayout GPUPanelLayout = new javax.swing.GroupLayout(GPUPanel);
        GPUPanel.setLayout(GPUPanelLayout);
        GPUPanelLayout.setHorizontalGroup(
            GPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GPUPanelLayout.createSequentialGroup()
                .addComponent(useGPURadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gpuEnvPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        GPUPanelLayout.setVerticalGroup(
            GPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(useGPURadioButton)
            .addGroup(GPUPanelLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(gpuEnvPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        splitPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Split the stack in...", 0, 0, null, new java.awt.Color(-16776961,true)));

        splitLabel.setText("Split stack in n parts split:");

        javax.swing.GroupLayout splitPanelLayout = new javax.swing.GroupLayout(splitPanel);
        splitPanel.setLayout(splitPanelLayout);
        splitPanelLayout.setHorizontalGroup(
            splitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(splitPanelLayout.createSequentialGroup()
                .addComponent(splitLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(splitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );
        splitPanelLayout.setVerticalGroup(
            splitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(splitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(splitLabel)
                .addComponent(splitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout mainPerformanceStackopsPanelLayout = new javax.swing.GroupLayout(mainPerformanceStackopsPanel);
        mainPerformanceStackopsPanel.setLayout(mainPerformanceStackopsPanelLayout);
        mainPerformanceStackopsPanelLayout.setHorizontalGroup(
            mainPerformanceStackopsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPerformanceStackopsPanelLayout.createSequentialGroup()
                .addGroup(mainPerformanceStackopsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(openMPPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataDistributionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GPUPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(splitPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(452, Short.MAX_VALUE))
        );
        mainPerformanceStackopsPanelLayout.setVerticalGroup(
            mainPerformanceStackopsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPerformanceStackopsPanelLayout.createSequentialGroup()
                .addComponent(dataDistributionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openMPPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GPUPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(splitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(399, Short.MAX_VALUE))
        );

        mainPerformanceSatckopsScrollPanel.setViewportView(mainPerformanceStackopsPanel);

        add(mainPerformanceSatckopsScrollPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GPUPanel;
    private javax.swing.JPanel dataDistributionPanel;
    private javax.swing.JPanel gpuEnvPanel;
    private javax.swing.JScrollPane mainPerformanceSatckopsScrollPanel;
    private javax.swing.JPanel mainPerformanceStackopsPanel;
    private javax.swing.JLabel npartLabel;
    private javax.swing.JTextField npartTextField;
    private javax.swing.JTextField nthrThreadsPerSocketTextField;
    private javax.swing.JRadioButton openCLRadioButton;
    private javax.swing.JPanel openMPPanel;
    private javax.swing.JLabel splitLabel;
    private javax.swing.JPanel splitPanel;
    private javax.swing.JTextField splitTextField;
    private javax.swing.JLabel threadsPerSocketLabel;
    private javax.swing.JRadioButton useCUDACRadioButton;
    private javax.swing.JRadioButton useGPURadioButton;
    private javax.swing.JRadioButton useOpenMPRadioButton;
    // End of variables declaration//GEN-END:variables

}
