#ifdef BUILD_NAME
   character(len=STDLEN) :: build_descr = BUILD_NAME                         !< compiler, build type and FFT backend - defined on commandline
#else
  character(len=STDLEN) :: build_descr = "NONE"
#endif
  character(len=STDLEN) :: BUILD_TYPE = "@CMAKE_BUILD_TYPE"
  character(len=STDLEN) :: SIMPLE_LIB_VERSION="@SIMPLE_VERSION@"     !< simple version
  character(len=STDLEN) :: SIMPLE_GIT_VERSION="@SIMPLE_GIT_VERSION@" !< git hash
  character(len=STDLEN) :: SIMPLE_SOURCE_PATH="@CMAKE_SOURCE_DIR@"   !< source dir
  character(len=STDLEN) :: SIMPLE_BUILD_PATH="@CMAKE_BINARY_DIR@"    !< where SIMPLE was built 
  character(len=STDLEN) :: SIMPLE_PATH="@CMAKE_INSTALL_DIR@"         !< installation dir

#ifdef INTEL
    character(len=STDLEN) :: FC_COMPILER= "Intel ifort 64"
     integer :: FC_COMPILER_VERSION(3) = (/ __INTEL_COMPILER, INT(__INTEL_COMPILER_BUILD_DATE/1000), mod(__INTEL_COMPILER_BUILD_DATE,1000) /)
#elif GNU
    character(len=STDLEN) :: FC_COMPILER= "GNU gfortran"
     integer :: FC_COMPILER_VERSION(3) = (/ __GNUC__, __GNUC_MINOR__, __GNUC_PATCHLEVEL__ /)
#elif PGI
    character(len=STDLEN) :: FC_COMPILER= "PGI fortran"
     integer :: FC_COMPILER_VERSION = (/ __PGIC__, __PGIC_MINOR__, __PGIC_PATCHLEVEL__ /)
#else
#error 'Compiler must be GNU, Intel or PGI'
#endif
